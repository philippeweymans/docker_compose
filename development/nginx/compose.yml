# services:
#   nginx:
#     image: nginx:latest
#     container_name: nginx-proxy
#     restart: unless-stopped
#     ports:
#       - "880:80"          # For standard HTTP
#       - "8443:443"        # For standard HTTPS
#       - "12345:12345"    # For your custom service if needed
#     volumes:
#       # Main nginx config
#       - /opt/docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
#       - /opt/docker/nginx/config/proxy.conf:/etc/nginx/proxy.conf:ro
#       # Extra site or reverse proxy configs
#       - /opt/docker/nginx/config/sites-enabled:/etc/nginx/conf.d:ro
#       # SSL certificates (update path if different)
#       - /opt/docker/nginx/config/cert:/etc/nginx/cert:ro
#       # Static files (optional)
#       #- ./data:/usr/share/nginx/html:ro
#       # Optional: custom logs
#       #- ./data/log:/var/log/nginx
#     environment:
#       - PUID=1000
#       - PGID=1000
#       - TZ=Europe/Brussels
#       # You can define env vars if you use templates - for basic configs, not always needed.
#     networks:
#       - nginx_net
# networks:
#   nginx_net:
#     driver: bridge


# Use a modern compose version
version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"      # Changed to port 80 for Let's Encrypt
      - "443:443"    # Changed to port 443 for standard HTTPS
    volumes:
      # Main nginx config
      - /opt/docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - /opt/docker/nginx/config/proxy.conf:/etc/nginx/proxy.conf:ro
      # Extra site or reverse proxy configs
      - /opt/docker/nginx/config/sites-enabled:/etc/nginx/conf.d:ro
      # SSL certificates (update path if different)
      - /opt/docker/nginx/certs:/etc/nginx/certs:ro # Updated path for consistency
      # Volume for Let's Encrypt challenge files
      - /opt/docker/nginx/www:/var/www/certbot:ro
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
    networks:
      - nginx_net


  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /opt/docker/nginx/certs:/etc/letsencrypt
      - /opt/docker/nginx/www:/var/www/certbot
    #command: certonly --webroot --webroot-path=/var/www/certbot --email YOUR_EMAIL@example.com --agree-tos --no-eff-email -d uptime.weymans.synology.me -d navidrome.weymans.synology.me ... (add all your domains here)
    # This top-level block defines the networks used by your services.

# It MUST be at the same indentation level as the 'services:' block above.
networks:
  nginx_net:
    driver: bridge
